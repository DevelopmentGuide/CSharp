I"Ö<p>JSON Web Token is a proposed Internet standard for creating data with optional signature and/or optional encryption whose payload holds JSON that asserts some number of claims. The tokens are signed either using a private secret or a public/private key.</p>

<p><a href="https://github.com/ProjectTutorials/JsonWebToken">Repository</a></p>

<h1 id="jwt-basics">JWT Basics</h1>

<p>Getting started with Json-Web-Token</p>

<ol>
  <li>
    <p><strong>Create two folders</strong></p>

    <ol>
      <li>
        <p><strong><a href="#backend">backend</a></strong></p>

        <ol>
          <li>
            <p><a href="#controllers">Controllers</a></p>

            <ol>
              <li>
                <p><a href="productscontrollercs">ProductsController</a></p>

                <ol>
                  <li>
                    <p><em><a href="#index">INDEX</a></em></p>
                  </li>
                  <li>
                    <p><em><a href="#details">DETAILS</a></em></p>
                  </li>
                  <li>
                    <p><em><a href="#create">CREATE</a></em></p>
                  </li>
                  <li>
                    <p><em><a href="#edit">EDIT</a></em></p>
                  </li>
                  <li>
                    <p><em><a href="#delete">DELETE</a></em></p>
                  </li>
                </ol>
              </li>
            </ol>
          </li>
          <li>
            <p><a href="#migrations">Migrations</a></p>
          </li>
          <li>
            <p><a href="#models">Models</a></p>

            <ol>
              <li>
                <p><em><a href="#productcs">Product.cs</a></em></p>
              </li>
              <li>
                <p><em><a href="#productmanagementcs">ProductManagement.cs</a></em></p>
              </li>
            </ol>
          </li>
        </ol>
      </li>
      <li>
        <p><strong><a href="#frontend">frontend</a></strong></p>

        <ol>
          <li>
            <p><a href="#controllers-1">Controllers</a></p>

            <ol>
              <li>
                <p><a href="#productscontrollercs-1">ProductsController</a></p>

                <ol>
                  <li>
                    <p><em><a href="#index-1">INDEX</a></em></p>
                  </li>
                  <li>
                    <p><em><a href="#create-1">CREATE</a></em></p>
                  </li>
                  <li>
                    <p><em><a href="#edit-1">EDIT</a></em></p>
                  </li>
                  <li>
                    <p><em><a href="#delete-1">DELETE</a></em></p>
                  </li>
                </ol>
              </li>
            </ol>
          </li>
          <li>
            <p><a href="#models-1">Model</a></p>

            <ol>
              <li><em><a href="#productcs-1">Product.cs</a></em></li>
            </ol>
          </li>
          <li>
            <p><a href="#views">Views</a></p>

            <ol>
              <li>
                <p><em><a href="#createcshtml">Create.cshtml</a></em></p>
              </li>
              <li>
                <p><em><a href="#deletecshtml">Delete.cshtml</a></em></p>
              </li>
              <li>
                <p><em><a href="#editcshtml">Edit.cshtml</a></em></p>
              </li>
              <li>
                <p><em><a href="#indexcshtml">Index.cshtml</a></em></p>
              </li>
            </ol>
          </li>
        </ol>
      </li>
    </ol>
  </li>
  <li>
    <p>To Start</p>

    <ol>
      <li>
        <p><strong><a href="#backend-1">backend</a></strong></p>
      </li>
      <li>
        <p><strong><a href="#frontend-1">frontend</a></strong></p>
      </li>
    </ol>
  </li>
  <li>
    <p><a href="#screenshots">Screenshots</a></p>
  </li>
</ol>

<h2 id="backend">backend</h2>

<p>This will contain webapi from the project</p>

<h3 id="controllers">Controllers</h3>

<h3 id="productscontrollercs"><code class="language-plaintext highlighter-rouge">ProductsController.cs</code></h3>

<h4 id="index">INDEX</h4>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span><span class="nf">Authorize</span><span class="p">(</span><span class="n">Roles</span> <span class="p">=</span> <span class="s">"Admin,User"</span><span class="p">)]</span>
<span class="p">[</span><span class="n">HttpGet</span><span class="p">]</span>
<span class="k">public</span> <span class="n">IEnumerable</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;</span> <span class="nf">Get</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">return</span> <span class="n">productManagementDbContext</span><span class="p">.</span><span class="n">Products</span><span class="p">.</span><span class="nf">ToList</span><span class="p">();</span>
<span class="p">}</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">Authorize</code> validates token to check for user or admin</p>

<h4 id="details">DETAILS</h4>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span><span class="nf">HttpGet</span><span class="p">(</span><span class="s">"{id}"</span><span class="p">)]</span>
<span class="k">public</span> <span class="n">Product</span> <span class="nf">Get</span><span class="p">(</span><span class="kt">int</span> <span class="n">id</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="n">productManagementDbContext</span><span class="p">.</span><span class="n">Products</span><span class="p">.</span><span class="nf">Where</span><span class="p">(</span><span class="n">product</span> <span class="p">=&gt;</span> <span class="n">product</span><span class="p">.</span><span class="n">Id</span> <span class="p">==</span> <span class="n">id</span><span class="p">).</span><span class="nf">FirstOrDefault</span><span class="p">();</span>
<span class="p">}</span>
</code></pre></div></div>

<h4 id="create">CREATE</h4>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span><span class="n">HttpPost</span><span class="p">]</span>
<span class="k">public</span> <span class="kt">string</span> <span class="nf">Post</span><span class="p">([</span><span class="n">FromBody</span><span class="p">]</span> <span class="n">Product</span> <span class="n">product</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="n">productManagementDbContext</span><span class="p">.</span><span class="n">Products</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="n">product</span><span class="p">);</span>
    <span class="k">this</span><span class="p">.</span><span class="n">productManagementDbContext</span><span class="p">.</span><span class="nf">SaveChanges</span><span class="p">();</span>
    <span class="k">return</span> <span class="s">"Product created successfully!"</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h4 id="edit">EDIT</h4>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span><span class="nf">HttpPut</span><span class="p">(</span><span class="s">"{id}"</span><span class="p">)]</span>
<span class="k">public</span> <span class="k">void</span> <span class="nf">Put</span><span class="p">(</span><span class="kt">int</span> <span class="n">id</span><span class="p">,</span> <span class="p">[</span><span class="n">FromBody</span><span class="p">]</span> <span class="n">Product</span> <span class="n">product</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="n">productManagementDbContext</span><span class="p">.</span><span class="n">Products</span><span class="p">.</span><span class="nf">Update</span><span class="p">(</span><span class="n">product</span><span class="p">);</span>
    <span class="k">this</span><span class="p">.</span><span class="n">productManagementDbContext</span><span class="p">.</span><span class="nf">SaveChanges</span><span class="p">();</span>
<span class="p">}</span>
</code></pre></div></div>

<h4 id="delete">DELETE</h4>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span><span class="nf">HttpDelete</span><span class="p">(</span><span class="s">"{id}"</span><span class="p">)]</span>
<span class="k">public</span> <span class="k">void</span> <span class="nf">Delete</span><span class="p">(</span><span class="kt">int</span> <span class="n">id</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="n">productManagementDbContext</span><span class="p">.</span><span class="n">Products</span><span class="p">.</span><span class="nf">Remove</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">productManagementDbContext</span><span class="p">.</span><span class="n">Products</span><span class="p">.</span><span class="nf">Where</span><span class="p">(</span><span class="n">product</span> <span class="p">=&gt;</span> <span class="n">product</span><span class="p">.</span><span class="n">Id</span> <span class="p">==</span> <span class="n">id</span><span class="p">).</span><span class="nf">FirstOrDefault</span><span class="p">());</span>
    <span class="k">this</span><span class="p">.</span><span class="n">productManagementDbContext</span><span class="p">.</span><span class="nf">SaveChanges</span><span class="p">();</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="migrations">Migrations</h3>

<p>This will contail <code class="language-plaintext highlighter-rouge">entity framework</code> files for database integration.</p>

<h3 id="models">Models</h3>

<h4 id="productcs"><code class="language-plaintext highlighter-rouge">Product.cs</code></h4>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="k">class</span> <span class="nc">Product</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="kt">int</span> <span class="n">Id</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Name</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="kt">int</span> <span class="n">Price</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h4 id="productmanagementcs"><code class="language-plaintext highlighter-rouge">ProductManagement.cs</code></h4>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="nf">ProductManagementDbContext</span><span class="p">(</span><span class="n">DbContextOptions</span><span class="p">&lt;</span><span class="n">ProductManagementDbContext</span><span class="p">&gt;</span> <span class="n">dbContextOptions</span><span class="p">)</span> <span class="p">:</span> <span class="k">base</span><span class="p">(</span><span class="n">dbContextOptions</span><span class="p">)</span>
<span class="p">{</span>
<span class="p">}</span>
<span class="k">public</span> <span class="n">DbSet</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;</span> <span class="n">Products</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
<span class="k">public</span> <span class="n">DbSet</span><span class="p">&lt;</span><span class="n">User</span><span class="p">&gt;</span> <span class="n">Users</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
<span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">OnModelCreating</span><span class="p">(</span><span class="n">ModelBuilder</span> <span class="n">modelBuilder</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">User</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span>
        <span class="k">new</span> <span class="n">User</span> <span class="p">{</span> <span class="n">Id</span> <span class="p">=</span> <span class="m">1</span><span class="p">,</span> <span class="n">Email</span> <span class="p">=</span> <span class="s">"admin@gmail.com"</span><span class="p">,</span> <span class="n">Password</span> <span class="p">=</span> <span class="s">"Passcode1"</span><span class="p">,</span> <span class="n">Role</span> <span class="p">=</span> <span class="n">Roles</span><span class="p">.</span><span class="n">Admin</span> <span class="p">},</span>
        <span class="k">new</span> <span class="n">User</span> <span class="p">{</span> <span class="n">Id</span> <span class="p">=</span> <span class="m">2</span><span class="p">,</span> <span class="n">Email</span> <span class="p">=</span> <span class="s">"user@gmail.com"</span><span class="p">,</span> <span class="n">Password</span> <span class="p">=</span> <span class="s">"Passcode2"</span><span class="p">,</span> <span class="n">Role</span> <span class="p">=</span> <span class="n">Roles</span><span class="p">.</span><span class="n">User</span> <span class="p">}</span>
        <span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="frontend">frontend</h2>

<p>This will contain mvc from the project</p>

<h3 id="controllers-1">Controllers</h3>

<h3 id="productscontrollercs-1"><code class="language-plaintext highlighter-rouge">ProductsController.cs</code></h3>

<h4 id="index-1">INDEX</h4>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">private</span> <span class="k">static</span> <span class="n">HttpClient</span> <span class="n">httpClient</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">HttpClient</span><span class="p">();</span>
<span class="k">public</span> <span class="nf">ProductsController</span><span class="p">(</span><span class="n">IConfiguration</span> <span class="n">configuration</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">Configuration</span> <span class="p">=</span> <span class="n">configuration</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">public</span> <span class="n">IConfiguration</span> <span class="n">Configuration</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="p">}</span>
<span class="c1">// GET: /&lt;controller&gt;/</span>
<span class="p">[</span><span class="n">HttpGet</span><span class="p">]</span>
<span class="k">public</span> <span class="k">async</span> <span class="n">Task</span><span class="p">&lt;</span><span class="n">IActionResult</span><span class="p">&gt;</span> <span class="nf">Index</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">httpClient</span><span class="p">.</span><span class="n">DefaultRequestHeaders</span><span class="p">.</span><span class="n">Accept</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">MediaTypeWithQualityHeaderValue</span><span class="p">(</span><span class="s">"application/json"</span><span class="p">));</span>
    <span class="n">httpClient</span><span class="p">.</span><span class="n">DefaultRequestHeaders</span><span class="p">.</span><span class="n">Authorization</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">AuthenticationHeaderValue</span><span class="p">(</span><span class="s">"Bearer"</span><span class="p">,</span> <span class="n">HttpContext</span><span class="p">.</span><span class="n">Session</span><span class="p">.</span><span class="nf">GetString</span><span class="p">(</span><span class="s">"token"</span><span class="p">));</span>
    <span class="kt">var</span> <span class="n">response</span> <span class="p">=</span> <span class="k">await</span> <span class="n">httpClient</span><span class="p">.</span><span class="nf">GetAsync</span><span class="p">(</span><span class="n">Configuration</span><span class="p">.</span><span class="n">GetValue</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;(</span><span class="s">"WebAPIBaseUrl"</span><span class="p">)</span> <span class="p">+</span> <span class="s">"/products"</span><span class="p">);</span>
    <span class="kt">var</span> <span class="n">content</span> <span class="p">=</span> <span class="k">await</span> <span class="n">response</span><span class="p">.</span><span class="n">Content</span><span class="p">.</span><span class="nf">ReadAsStringAsync</span><span class="p">();</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">IsSuccessStatusCode</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">var</span> <span class="n">products</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;();</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">Content</span><span class="p">.</span><span class="n">Headers</span><span class="p">.</span><span class="n">ContentType</span><span class="p">.</span><span class="n">MediaType</span> <span class="p">==</span> <span class="s">"application/json"</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">products</span> <span class="p">=</span> <span class="n">JsonConvert</span><span class="p">.</span><span class="n">DeserializeObject</span><span class="p">&lt;</span><span class="n">List</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;&gt;(</span><span class="n">content</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">return</span> <span class="nf">View</span><span class="p">(</span><span class="n">products</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">else</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="nf">RedirectToAction</span><span class="p">(</span><span class="s">"Login"</span><span class="p">,</span> <span class="s">"Account"</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h4 id="create-1">CREATE</h4>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="k">async</span> <span class="n">Task</span><span class="p">&lt;</span><span class="n">IActionResult</span><span class="p">&gt;</span> <span class="nf">Create</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">return</span> <span class="nf">View</span><span class="p">();</span>
<span class="p">}</span>

<span class="p">[</span><span class="n">HttpPost</span><span class="p">]</span>
<span class="k">public</span> <span class="k">async</span> <span class="n">Task</span><span class="p">&lt;</span><span class="n">IActionResult</span><span class="p">&gt;</span> <span class="nf">Create</span><span class="p">(</span><span class="n">Product</span> <span class="n">product</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">ModelState</span><span class="p">.</span><span class="n">IsValid</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">var</span> <span class="n">serializedProductToCreate</span> <span class="p">=</span> <span class="n">JsonConvert</span><span class="p">.</span><span class="nf">SerializeObject</span><span class="p">(</span><span class="n">product</span><span class="p">);</span>
        <span class="kt">var</span> <span class="n">request</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">HttpRequestMessage</span><span class="p">(</span><span class="n">HttpMethod</span><span class="p">.</span><span class="n">Post</span><span class="p">,</span> <span class="n">Configuration</span><span class="p">.</span><span class="n">GetValue</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;(</span><span class="s">"WebAPIBaseUrl"</span><span class="p">)</span> <span class="p">+</span> <span class="s">"/products"</span><span class="p">);</span>
        <span class="n">request</span><span class="p">.</span><span class="n">Headers</span><span class="p">.</span><span class="n">Accept</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">MediaTypeWithQualityHeaderValue</span><span class="p">(</span><span class="s">"application/json"</span><span class="p">));</span>
        <span class="n">request</span><span class="p">.</span><span class="n">Content</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">StringContent</span><span class="p">(</span><span class="n">serializedProductToCreate</span><span class="p">);</span>
        <span class="n">request</span><span class="p">.</span><span class="n">Content</span><span class="p">.</span><span class="n">Headers</span><span class="p">.</span><span class="n">ContentType</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">MediaTypeHeaderValue</span><span class="p">(</span><span class="s">"application/json"</span><span class="p">);</span>
        <span class="kt">var</span> <span class="n">response</span> <span class="p">=</span> <span class="k">await</span> <span class="n">httpClient</span><span class="p">.</span><span class="nf">SendAsync</span><span class="p">(</span><span class="n">request</span><span class="p">);</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">IsSuccessStatusCode</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="nf">RedirectToAction</span><span class="p">(</span><span class="s">"Index"</span><span class="p">,</span> <span class="s">"Products"</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">else</span>
        <span class="p">{</span>
            <span class="n">ViewBag</span><span class="p">.</span><span class="n">Message</span> <span class="p">=</span> <span class="s">"Admin access required"</span><span class="p">;</span>
            <span class="k">return</span> <span class="nf">View</span><span class="p">(</span><span class="s">"Create"</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">else</span>
        <span class="k">return</span> <span class="nf">View</span><span class="p">(</span><span class="s">"Create"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h4 id="edit-1">EDIT</h4>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span><span class="n">HttpGet</span><span class="p">]</span>
<span class="k">public</span> <span class="k">async</span> <span class="n">Task</span><span class="p">&lt;</span><span class="n">IActionResult</span><span class="p">&gt;</span> <span class="nf">Edit</span><span class="p">(</span><span class="kt">int</span> <span class="n">id</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">var</span> <span class="n">response</span> <span class="p">=</span> <span class="k">await</span> <span class="n">httpClient</span><span class="p">.</span><span class="nf">GetAsync</span><span class="p">(</span><span class="n">Configuration</span><span class="p">.</span><span class="n">GetValue</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;(</span><span class="s">"WebAPIBaseUrl"</span><span class="p">)</span> <span class="p">+</span> <span class="s">$"/products/</span><span class="p">{</span><span class="n">id</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
    <span class="n">response</span><span class="p">.</span><span class="nf">EnsureSuccessStatusCode</span><span class="p">();</span>
    <span class="kt">var</span> <span class="n">content</span> <span class="p">=</span> <span class="k">await</span> <span class="n">response</span><span class="p">.</span><span class="n">Content</span><span class="p">.</span><span class="nf">ReadAsStringAsync</span><span class="p">();</span>
    <span class="kt">var</span> <span class="n">product</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Product</span><span class="p">();</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">Content</span><span class="p">.</span><span class="n">Headers</span><span class="p">.</span><span class="n">ContentType</span><span class="p">.</span><span class="n">MediaType</span> <span class="p">==</span> <span class="s">"application/json"</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">product</span> <span class="p">=</span> <span class="n">JsonConvert</span><span class="p">.</span><span class="n">DeserializeObject</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;(</span><span class="n">content</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nf">View</span><span class="p">(</span><span class="n">product</span><span class="p">);</span>
<span class="p">}</span>

<span class="p">[</span><span class="n">HttpPost</span><span class="p">]</span>
<span class="k">public</span> <span class="k">async</span> <span class="n">Task</span><span class="p">&lt;</span><span class="n">IActionResult</span><span class="p">&gt;</span> <span class="nf">Edit</span><span class="p">(</span><span class="n">Product</span> <span class="n">product</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">ModelState</span><span class="p">.</span><span class="n">IsValid</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="c1">//httpClient.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));</span>
        <span class="n">httpClient</span><span class="p">.</span><span class="n">DefaultRequestHeaders</span><span class="p">.</span><span class="n">Authorization</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">AuthenticationHeaderValue</span><span class="p">(</span><span class="s">"Bearer"</span><span class="p">,</span> <span class="n">HttpContext</span><span class="p">.</span><span class="n">Session</span><span class="p">.</span><span class="nf">GetString</span><span class="p">(</span><span class="s">"token"</span><span class="p">));</span>
        <span class="kt">var</span> <span class="n">serializedProductToEdit</span> <span class="p">=</span> <span class="n">JsonConvert</span><span class="p">.</span><span class="nf">SerializeObject</span><span class="p">(</span><span class="n">product</span><span class="p">);</span>
        <span class="kt">var</span> <span class="n">request</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">HttpRequestMessage</span><span class="p">(</span><span class="n">HttpMethod</span><span class="p">.</span><span class="n">Put</span><span class="p">,</span> <span class="n">Configuration</span><span class="p">.</span><span class="n">GetValue</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;(</span><span class="s">"WebAPIBaseUrl"</span><span class="p">)</span> <span class="p">+</span> <span class="s">$"/products/</span><span class="p">{</span><span class="n">product</span><span class="p">.</span><span class="n">Id</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">request</span><span class="p">.</span><span class="n">Headers</span><span class="p">.</span><span class="n">Accept</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">MediaTypeWithQualityHeaderValue</span><span class="p">(</span><span class="s">"application/json"</span><span class="p">));</span>
        <span class="n">request</span><span class="p">.</span><span class="n">Content</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">StringContent</span><span class="p">(</span><span class="n">serializedProductToEdit</span><span class="p">);</span>
        <span class="n">request</span><span class="p">.</span><span class="n">Content</span><span class="p">.</span><span class="n">Headers</span><span class="p">.</span><span class="n">ContentType</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">MediaTypeHeaderValue</span><span class="p">(</span><span class="s">"application/json"</span><span class="p">);</span>
        <span class="kt">var</span> <span class="n">response</span> <span class="p">=</span> <span class="k">await</span> <span class="n">httpClient</span><span class="p">.</span><span class="nf">SendAsync</span><span class="p">(</span><span class="n">request</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">IsSuccessStatusCode</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="nf">RedirectToAction</span><span class="p">(</span><span class="s">"Index"</span><span class="p">,</span> <span class="s">"Products"</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">else</span>
        <span class="p">{</span>
            <span class="n">ViewBag</span><span class="p">.</span><span class="n">Message</span> <span class="p">=</span> <span class="s">"Admin access required"</span><span class="p">;</span>
            <span class="k">return</span> <span class="nf">View</span><span class="p">(</span><span class="s">"Edit"</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">else</span>
        <span class="k">return</span> <span class="nf">View</span><span class="p">(</span><span class="s">"Edit"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h4 id="delete-1">DELETE</h4>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span><span class="n">HttpGet</span><span class="p">]</span>
<span class="k">public</span> <span class="k">async</span> <span class="n">Task</span><span class="p">&lt;</span><span class="n">IActionResult</span><span class="p">&gt;</span> <span class="nf">Delete</span><span class="p">(</span><span class="kt">int</span> <span class="n">id</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">var</span> <span class="n">response</span> <span class="p">=</span> <span class="k">await</span> <span class="n">httpClient</span><span class="p">.</span><span class="nf">GetAsync</span><span class="p">(</span><span class="n">Configuration</span><span class="p">.</span><span class="n">GetValue</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;(</span><span class="s">"WebAPIBaseUrl"</span><span class="p">)</span> <span class="p">+</span> <span class="s">$"/products/</span><span class="p">{</span><span class="n">id</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
    <span class="n">response</span><span class="p">.</span><span class="nf">EnsureSuccessStatusCode</span><span class="p">();</span>
    <span class="kt">var</span> <span class="n">content</span> <span class="p">=</span> <span class="k">await</span> <span class="n">response</span><span class="p">.</span><span class="n">Content</span><span class="p">.</span><span class="nf">ReadAsStringAsync</span><span class="p">();</span>
    <span class="kt">var</span> <span class="n">product</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Product</span><span class="p">();</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">Content</span><span class="p">.</span><span class="n">Headers</span><span class="p">.</span><span class="n">ContentType</span><span class="p">.</span><span class="n">MediaType</span> <span class="p">==</span> <span class="s">"application/json"</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">product</span> <span class="p">=</span> <span class="n">JsonConvert</span><span class="p">.</span><span class="n">DeserializeObject</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;(</span><span class="n">content</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nf">View</span><span class="p">(</span><span class="n">product</span><span class="p">);</span>
<span class="p">}</span>

<span class="p">[</span><span class="n">HttpPost</span><span class="p">]</span>
<span class="k">public</span> <span class="k">async</span> <span class="n">Task</span><span class="p">&lt;</span><span class="n">IActionResult</span><span class="p">&gt;</span> <span class="nf">Delete</span><span class="p">(</span><span class="n">Product</span> <span class="n">product</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">ModelState</span><span class="p">.</span><span class="n">IsValid</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="c1">//httpClient.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));</span>
        <span class="n">httpClient</span><span class="p">.</span><span class="n">DefaultRequestHeaders</span><span class="p">.</span><span class="n">Authorization</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">AuthenticationHeaderValue</span><span class="p">(</span><span class="s">"Bearer"</span><span class="p">,</span> <span class="n">HttpContext</span><span class="p">.</span><span class="n">Session</span><span class="p">.</span><span class="nf">GetString</span><span class="p">(</span><span class="s">"token"</span><span class="p">));</span>
        <span class="kt">var</span> <span class="n">serializedProductToDelete</span> <span class="p">=</span> <span class="n">JsonConvert</span><span class="p">.</span><span class="nf">SerializeObject</span><span class="p">(</span><span class="n">product</span><span class="p">);</span>
        <span class="kt">var</span> <span class="n">request</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">HttpRequestMessage</span><span class="p">(</span><span class="n">HttpMethod</span><span class="p">.</span><span class="n">Delete</span><span class="p">,</span> <span class="n">Configuration</span><span class="p">.</span><span class="n">GetValue</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">&gt;(</span><span class="s">"WebAPIBaseUrl"</span><span class="p">)</span> <span class="p">+</span> <span class="s">$"/products/</span><span class="p">{</span><span class="n">product</span><span class="p">.</span><span class="n">Id</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>
        <span class="n">request</span><span class="p">.</span><span class="n">Headers</span><span class="p">.</span><span class="n">Accept</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">MediaTypeWithQualityHeaderValue</span><span class="p">(</span><span class="s">"application/json"</span><span class="p">));</span>
        <span class="n">request</span><span class="p">.</span><span class="n">Content</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">StringContent</span><span class="p">(</span><span class="n">serializedProductToDelete</span><span class="p">);</span>
        <span class="n">request</span><span class="p">.</span><span class="n">Content</span><span class="p">.</span><span class="n">Headers</span><span class="p">.</span><span class="n">ContentType</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">MediaTypeHeaderValue</span><span class="p">(</span><span class="s">"application/json"</span><span class="p">);</span>
        <span class="kt">var</span> <span class="n">response</span> <span class="p">=</span> <span class="k">await</span> <span class="n">httpClient</span><span class="p">.</span><span class="nf">SendAsync</span><span class="p">(</span><span class="n">request</span><span class="p">);</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">IsSuccessStatusCode</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="nf">RedirectToAction</span><span class="p">(</span><span class="s">"Index"</span><span class="p">,</span> <span class="s">"Products"</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">else</span>
        <span class="p">{</span>
            <span class="n">ViewBag</span><span class="p">.</span><span class="n">Message</span> <span class="p">=</span> <span class="s">"Admin access required"</span><span class="p">;</span>
            <span class="k">return</span> <span class="nf">View</span><span class="p">(</span><span class="s">"Delete"</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">else</span>
        <span class="n">ViewBag</span><span class="p">.</span><span class="n">Message</span> <span class="p">=</span> <span class="s">"wrong"</span><span class="p">;</span>
    <span class="k">return</span> <span class="nf">View</span><span class="p">(</span><span class="s">"Delete"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="models-1">Models</h3>

<h4 id="productcs-1"><code class="language-plaintext highlighter-rouge">Product.cs</code></h4>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">public</span> <span class="k">class</span> <span class="nc">Product</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="nf">Product</span><span class="p">()</span>
        <span class="p">{</span>
        <span class="p">}</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">Id</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">Name</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">Price</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>
</code></pre></div></div>

<h3 id="views">Views</h3>

<h4 id="createcshtml"><code class="language-plaintext highlighter-rouge">Create.cshtml</code></h4>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>@{
    ViewBag.Title = "Create";
}
@model Product
<span class="nt">&lt;form</span> <span class="na">asp-action=</span><span class="s">"Create"</span> <span class="na">asp-controller=</span><span class="s">"Products"</span> <span class="na">method=</span><span class="s">"post"</span> <span class="na">class=</span><span class="s">"contactForm"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;fieldset&gt;</span>
        <span class="nt">&lt;p&gt;</span>
            <span class="nt">&lt;label</span> <span class="na">asp-for=</span><span class="s">"Name"</span><span class="nt">&gt;&lt;/label&gt;</span>
            <span class="nt">&lt;input</span> <span class="na">asp-for=</span><span class="s">"Name"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;/p&gt;</span>
        <span class="nt">&lt;p&gt;</span>
            <span class="nt">&lt;label</span> <span class="na">asp-for=</span><span class="s">"Price"</span><span class="nt">&gt;&lt;/label&gt;</span>
            <span class="nt">&lt;input</span> <span class="na">asp-for=</span><span class="s">"Price"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;/p&gt;</span>
        <span class="nt">&lt;p&gt;</span>
            <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">class=</span><span class="s">"btn btn-primary"</span><span class="nt">&gt;</span>Save<span class="nt">&lt;/button&gt;</span>
        <span class="nt">&lt;/p&gt;</span>
    <span class="nt">&lt;/fieldset&gt;</span>
        <span class="nt">&lt;h6</span> <span class="na">style=</span><span class="s">"color:red"</span><span class="nt">&gt;</span>@Html.Raw(@ViewBag.Message)<span class="nt">&lt;/h6&gt;</span>
 
<span class="nt">&lt;/form&gt;</span>
</code></pre></div></div>

<h4 id="deletecshtml"><code class="language-plaintext highlighter-rouge">Delete.cshtml</code></h4>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>@{
    ViewBag.Title = "Delete - " + @Model.Name;
}
@model Product

<span class="nt">&lt;form</span> <span class="na">asp-action=</span><span class="s">"Delete"</span> <span class="na">asp-controller=</span><span class="s">"Products"</span> <span class="na">method=</span><span class="s">"post"</span> <span class="na">class=</span><span class="s">"contactForm"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;fieldset&gt;</span>
        <span class="nt">&lt;p&gt;</span>
            <span class="nt">&lt;input</span> <span class="na">asp-for=</span><span class="s">"Id"</span> <span class="na">hidden</span> <span class="na">readonly</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;/p&gt;</span>
        <span class="nt">&lt;p&gt;</span>
            <span class="nt">&lt;label</span> <span class="na">asp-for=</span><span class="s">"Name"</span><span class="nt">&gt;&lt;/label&gt;</span>
            <span class="nt">&lt;input</span> <span class="na">asp-for=</span><span class="s">"Name"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;/p&gt;</span>
        <span class="nt">&lt;p&gt;</span>
            <span class="nt">&lt;label</span> <span class="na">asp-for=</span><span class="s">"Price"</span><span class="nt">&gt;&lt;/label&gt;</span>
            <span class="nt">&lt;input</span> <span class="na">asp-for=</span><span class="s">"Price"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;/p&gt;</span>
        <span class="nt">&lt;p&gt;</span>
            <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">class=</span><span class="s">"btn btn-danger"</span><span class="nt">&gt;</span>Delete<span class="nt">&lt;/button&gt;</span>
        <span class="nt">&lt;/p&gt;</span>
    <span class="nt">&lt;/fieldset&gt;</span>
    <span class="nt">&lt;h6</span> <span class="na">style=</span><span class="s">"color:red"</span><span class="nt">&gt;</span>@Html.Raw(@ViewBag.Message)<span class="nt">&lt;/h6&gt;</span>
<span class="nt">&lt;/form&gt;</span>
</code></pre></div></div>

<h4 id="editcshtml"><code class="language-plaintext highlighter-rouge">Edit.cshtml</code></h4>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>@{
    ViewBag.Title = "Edit - " + @Model.Name;
}
@model Product

<span class="nt">&lt;form</span> <span class="na">asp-action=</span><span class="s">"Edit"</span> <span class="na">asp-controller=</span><span class="s">"Products"</span> <span class="na">method=</span><span class="s">"post"</span> <span class="na">class=</span><span class="s">"contactForm"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;fieldset&gt;</span>
        <span class="nt">&lt;p&gt;</span>
            <span class="nt">&lt;input</span> <span class="na">asp-for=</span><span class="s">"Id"</span> <span class="na">hidden</span> <span class="na">readonly</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;/p&gt;</span>
        <span class="nt">&lt;p&gt;</span>
            <span class="nt">&lt;label</span> <span class="na">asp-for=</span><span class="s">"Name"</span><span class="nt">&gt;&lt;/label&gt;</span>
            <span class="nt">&lt;input</span> <span class="na">asp-for=</span><span class="s">"Name"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;/p&gt;</span>
        <span class="nt">&lt;p&gt;</span>
            <span class="nt">&lt;label</span> <span class="na">asp-for=</span><span class="s">"Price"</span><span class="nt">&gt;&lt;/label&gt;</span>
            <span class="nt">&lt;input</span> <span class="na">asp-for=</span><span class="s">"Price"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;/p&gt;</span>
        <span class="nt">&lt;p&gt;</span>
            <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"submit"</span> <span class="na">class=</span><span class="s">"btn btn-secondary"</span><span class="nt">&gt;</span>Update<span class="nt">&lt;/button&gt;</span>
        <span class="nt">&lt;/p&gt;</span>
    <span class="nt">&lt;/fieldset&gt;</span>
    <span class="nt">&lt;h6</span> <span class="na">style=</span><span class="s">"color:red"</span><span class="nt">&gt;</span>@Html.Raw(@ViewBag.Message)<span class="nt">&lt;/h6&gt;</span>
<span class="nt">&lt;/form&gt;</span>
</code></pre></div></div>

<h4 id="indexcshtml"><code class="language-plaintext highlighter-rouge">Index.cshtml</code></h4>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>@{

    ViewBag.Title = "Product";
}
@model List<span class="nt">&lt;Product&gt;</span>


<span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">"justify-content: space-between; display: flex;"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"btn btn-success"</span> <span class="na">asp-controller=</span><span class="s">"Products"</span> <span class="na">asp-action=</span><span class="s">"Create"</span><span class="nt">&gt;</span>CREATE <span class="nt">&lt;i</span> <span class="na">class=</span><span class="s">"fa-solid fa-plus"</span><span class="nt">&gt;&lt;/i&gt;&lt;/a&gt;</span>
    <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"btn btn-danger"</span> <span class="na">asp-controller=</span><span class="s">""</span> <span class="na">asp-action=</span><span class="s">""</span><span class="nt">&gt;</span>LOG OUT<span class="nt">&lt;/a&gt;</span>
<span class="nt">&lt;/div&gt;</span>

<span class="nt">&lt;table</span> <span class="na">class=</span><span class="s">"table table-striped pushDown"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;thead&gt;</span>
        <span class="nt">&lt;tr&gt;</span>
            <span class="nt">&lt;th&gt;</span>ID<span class="nt">&lt;/th&gt;</span>
            <span class="nt">&lt;th&gt;</span>Name<span class="nt">&lt;/th&gt;</span>
            <span class="nt">&lt;th&gt;</span>Price<span class="nt">&lt;/th&gt;</span>
            <span class="nt">&lt;th&gt;</span>Action<span class="nt">&lt;/th&gt;</span>
        <span class="nt">&lt;/tr&gt;</span>
    <span class="nt">&lt;/thead&gt;</span>
    <span class="nt">&lt;tbody&gt;</span>
        @foreach (var item in Model)
        {
            <span class="nt">&lt;tr&gt;</span>
                <span class="nt">&lt;td&gt;</span>@item.Id<span class="nt">&lt;/td&gt;</span>
                <span class="nt">&lt;td&gt;</span>@item.Name<span class="nt">&lt;/td&gt;</span>
                <span class="nt">&lt;td&gt;</span>@item.Price<span class="nt">&lt;/td&gt;</span>
                <span class="nt">&lt;td&gt;</span>
                    <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"btn btn-primary"</span> <span class="na">asp-controller=</span><span class="s">"Products"</span> <span class="na">asp-action=</span><span class="s">"Edit"</span> <span class="na">asp-route-id=</span><span class="s">"@item.Id"</span><span class="nt">&gt;</span>EDIT<span class="nt">&lt;/a&gt;</span>
                    <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"btn btn-danger"</span> <span class="na">asp-controller=</span><span class="s">"Products"</span> <span class="na">asp-action=</span><span class="s">"Delete"</span>
                    <span class="na">asp-route-id=</span><span class="s">"@item.Id"</span><span class="nt">&gt;</span>DELETE<span class="nt">&lt;/a&gt;</span>
                <span class="nt">&lt;/td&gt;</span>
            <span class="nt">&lt;/tr&gt;</span>
        }
    <span class="nt">&lt;/tbody&gt;</span>
<span class="nt">&lt;/table&gt;</span>
</code></pre></div></div>

<h2 id="to-start">To Start</h2>

<h2 id="backend-1">backend</h2>

<h4 id="prerequisites">Prerequisites</h4>

<ol>
  <li>
    <p><a href="https://dotnet.microsoft.com/en-us/download/dotnet/6.0#:~:text=May%2010%2C%202022-,Build%20apps%20%2D%20SDK,-Tooltip%3A%20Do%20you">.NET 6.0</a></p>
  </li>
  <li>
    <p><a href="https://docs.microsoft.com/en-us/sql/ssms/download-sql-server-management-studio-ssms?view=sql-server-ver16#:~:text=Free%20Download%20for%20SQL%20Server%20Management%20Studio%20(SSMS)%2018.12.1">SQL-Server</a></p>
  </li>
  <li>
    <p><a href="https://www.microsoft.com/en-in/sql-server/sql-server-downloads#:~:text=Download%20now-,Express,-SQL%20Server%202019">SSMS</a></p>
  </li>
</ol>

<h4 id="to-start-1">To Start</h4>

<ol>
  <li>
    <p>For Database connection</p>

    <p>Build the solution</p>

    <div class="language-ps highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nf">dotnet</span> <span class="nf">ef</span> <span class="nf">database</span> <span class="nf">update</span>
</code></pre></div>    </div>

    <p>Expected output</p>

    <pre><code class="language-output"> Build started...
 Build succeeded.
 Done.
</code></pre>
  </li>
  <li>
    <p>Use <code class="language-plaintext highlighter-rouge">postman</code> or <code class="language-plaintext highlighter-rouge">thunderclient</code> further</p>
  </li>
  <li>
    <p><strong>POST</strong> method</p>

    <p>https://localhost:5001/api/authenticate</p>

    <p>There in <em>basic auth</em> use these credentials</p>

    <div class="language-http highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err"> UserName: admin@gmail.com
 Password: Passcode1
</span></code></pre></div>    </div>

    <p>##### <code class="language-plaintext highlighter-rouge">Token</code> would be generated</p>

    <details>
 <summary>Screenshots</summary>
 <img src="https://user-images.githubusercontent.com/76637730/185432139-1499ed0d-742e-49b5-871c-08b974b9127e.png" /> <br />       
 Response <br /> 
 <img src="https://user-images.githubusercontent.com/76637730/185439279-51db7471-c966-4dcb-bfb0-5f64e4cb1eac.png" /> 
 </details>
  </li>
  <li>
    <p><strong>GET</strong> method</p>

    <p>https://localhost:5001/api/products</p>

    <p>There in <em>Bearer Token</em> use the <a href="#token-would-be-generated">token</a> generated</p>

    <details>
 <summary>Screenshots</summary>
 <img src="https://user-images.githubusercontent.com/76637730/185442808-d2874be3-dd02-490a-9c60-b1ded862606e.png" />  <br /> 
 Response <br /> 
 <img src="https://user-images.githubusercontent.com/76637730/185442861-aea3e58f-5321-44c9-8b82-da3d82e95927.png" /> 
 </details>
  </li>
</ol>

<h2 id="frontend-1">frontend</h2>

<h4 id="run-it-using-either-of-the-command">Run it using either of the command</h4>

<div class="language-ps highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">dotnet</span> <span class="nb">run</span>
</code></pre></div></div>

<div class="language-ps highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">dotnet</span> <span class="nf">watch</span> <span class="nb">run</span>
</code></pre></div></div>

<h2 id="screenshots">Screenshots</h2>

<ol>
  <li>
    <p>Login
<img src="https://user-images.githubusercontent.com/76637730/185850124-b8f7f06f-4bbc-4ced-847a-fe0184899393.png" alt="image" /></p>
  </li>
  <li>
    <p>Index
<img src="https://user-images.githubusercontent.com/76637730/185850168-47e32268-2566-482c-ba02-d4ec566c327b.png" alt="image" /></p>
  </li>
  <li>
    <p>Create
<img src="https://user-images.githubusercontent.com/76637730/185850311-5c8adf04-dc3a-4274-9eaf-d5352e5ec16e.png" alt="image" /></p>
  </li>
  <li>
    <p>Edit
<img src="https://user-images.githubusercontent.com/76637730/185850218-e0bed450-b83b-4c35-9666-1398e984dc1b.png" alt="image" /></p>
  </li>
</ol>
:ET